C251 COMPILER V5.60.0,  lcd_init                                                           29/10/24  08:37:10  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE lcd_init
OBJECT MODULE PLACED IN .\Output\lcd_init.obj
COMPILER INVOKED BY: D:\Program Files\keil5\C251\BIN\C251.EXE base\LCD\lcd_init.c XSMALL BROWSE INCDIR(..\COMM;.\base;.\
                    -base\LCD;.\middle\LCDapp;.\base\adc;.\base\KEY;.\base\TIME;.\Src;.\middle\Adjust;.\Src;.\middle\WAVE;.\base\SPI;.\base\P
                    -WM;.\base\BUZZER;.\middle\ALARM;.\middle\MENU;.\Driver\inc) DEBUG PRINT(.\Listings\lcd_init.lst) TABS(2) OBJECT(.\Output
                    -\lcd_init.obj) 

stmt  level    source

    1          #include "lcd_init.h"
    2          
    3          //不准确延时函数
    4          void delay_ms(unsigned int ms)
    5          {                         
    6   1        unsigned int a;
    7   1        while(ms)
    8   1        {
    9   2          a=1800;
   10   2          while(a--);
   11   2          ms--;
   12   2        }
   13   1      }
   14          /*  写命令
   15              Write Command   */
   16          void LCD_Write_Command(u8 dat)//spi
   17          {
   18   1          OLED_DC_Clr();
   19   1          _nop_();
   20   1          OLED_CS_Clr();
   21   1          SPDAT = dat;
   22   1          while(SPIF == 0) ;
   23   1          SPIF = 1;   //清SPIF标志
   24   1          WCOL = 1;   //清WCOL标志
   25   1          OLED_CS_Set();
   26   1      }
   27          
   28          /*  写数据
   29              Write Data  */
   30          void LCD_Write_Data(u8 dat)//spi
   31          {
   32   1          OLED_DC_Set();
   33   1          _nop_();
   34   1          OLED_CS_Clr();
   35   1          SPDAT = dat;
   36   1          while(SPIF == 0) ;
   37   1          SPIF = 1;   //清SPIF标志
   38   1          WCOL = 1;   //清WCOL标志
   39   1          OLED_CS_Set();
   40   1      }
   41          
   42          /******************************************************************************
   43                函数说明：LCD串行数据写入函数
   44                入口数据：dat  要写入的串行数据
   45                返回值：  无
   46          ******************************************************************************/
   47          //void LCD_Writ_Bus(u8 dat) 
   48          //{ 
   49          //  u8 i;
   50          //  LCD_CS_Clr();
   51          //  for(i=0;i<8;i++)
   52          //  {       
   53          //    LCD_SCLK_Clr();
   54          //    if(dat&0x80)
   55          //    {
   56          //       LCD_MOSI_Set();
C251 COMPILER V5.60.0,  lcd_init                                                           29/10/24  08:37:10  PAGE 2   

   57          //    }
   58          //    else
   59          //    {
   60          //       LCD_MOSI_Clr();
   61          //    }
   62          //    LCD_SCLK_Set();
   63          //    dat<<=1;
   64          //  } 
   65          //  LCD_CS_Set(); 
   66          //}
   67          
   68          
   69          /******************************************************************************
   70                函数说明：LCD写入数据
   71                入口数据：dat 写入的数据
   72                返回值：  无
   73          ******************************************************************************/
   74          void LCD_WR_DATA8(u8 dat)
   75          {
   76   1        LCD_Write_Data(dat);
   77   1      }
   78          
   79          
   80          /******************************************************************************
   81                函数说明：LCD写入数据
   82                入口数据：dat 写入的数据
   83                返回值：  无
   84          ******************************************************************************/
   85          void LCD_WR_DATA(u16 dat)
   86          {
   87   1        LCD_Write_Data((u8)(dat>>8));
   88   1        LCD_Write_Data((u8)dat);
   89   1      }
   90          
   91          
   92          /******************************************************************************
   93                函数说明：LCD写入命令
   94                入口数据：dat 写入的命令
   95                返回值：  无
   96          ******************************************************************************/
   97          void LCD_WR_REG(u8 dat)
   98          {
   99   1      //  LCD_DC_Clr();//写命令
  100   1      //  LCD_Write_Data(dat);
  101   1      //  LCD_DC_Set();//写数据
  102   1        LCD_Write_Command(dat);
  103   1      }
  104          
  105          
  106          /******************************************************************************
  107                函数说明：设置起始和结束地址
  108                入口数据：x1,x2 设置列的起始和结束地址
  109                          y1,y2 设置行的起始和结束地址
  110                返回值：  无
  111          ******************************************************************************/
  112          void LCD_Address_Set(u16 x1,u16 y1,u16 x2,u16 y2)
  113          {
  114   1        if(USE_HORIZONTAL==0)
  115   1        {
  116   2          LCD_WR_REG(0x2a);//列地址设置
  117   2          LCD_WR_DATA(x1+24);
  118   2          LCD_WR_DATA(x2+24);
  119   2          LCD_WR_REG(0x2b);//行地址设置
  120   2          LCD_WR_DATA(y1);
  121   2          LCD_WR_DATA(y2);
  122   2          LCD_WR_REG(0x2c);//储存器写
C251 COMPILER V5.60.0,  lcd_init                                                           29/10/24  08:37:10  PAGE 3   

  123   2        }
  124   1        else if(USE_HORIZONTAL==1)
  125   1        {
  126   2          LCD_WR_REG(0x2a);//列地址设置
  127   2          LCD_WR_DATA(x1+24);
  128   2          LCD_WR_DATA(x2+24);
  129   2          LCD_WR_REG(0x2b);//行地址设置
  130   2          LCD_WR_DATA(y1);
  131   2          LCD_WR_DATA(y2);
  132   2          LCD_WR_REG(0x2c);//储存器写
  133   2        }
  134   1        else if(USE_HORIZONTAL==2)
  135   1        {
  136   2          LCD_WR_REG(0x2a);//列地址设置
  137   2          LCD_WR_DATA(x1);
  138   2          LCD_WR_DATA(x2);
  139   2          LCD_WR_REG(0x2b);//行地址设置
  140   2          LCD_WR_DATA(y1+24);
  141   2          LCD_WR_DATA(y2+24);
  142   2          LCD_WR_REG(0x2c);//储存器写
  143   2        }
  144   1        else
  145   1        {
  146   2          LCD_WR_REG(0x2a);//列地址设置
  147   2          LCD_WR_DATA(x1);
  148   2          LCD_WR_DATA(x2);
  149   2          LCD_WR_REG(0x2b);//行地址设置
  150   2          LCD_WR_DATA(y1+24);
  151   2          LCD_WR_DATA(y2+24);
  152   2          LCD_WR_REG(0x2c);//储存器写
  153   2        }
  154   1      }
  155          
  156          void LCD_Init(void)
  157          {
  158   1        //LCD_RES_Clr();
  159   1        OLED_CS_Clr();//复位
  160   1        delay_ms(300);
  161   1        OLED_RST_Set();
  162   1        delay_ms(300);
  163   1        
  164   1        LCD_BLK_Set();//打开背光
  165   1        delay_ms(300);
  166   1        
  167   1        LCD_WR_REG(0x11);//Sleep exit 
  168   1        delay_ms(360);                //Delay 120ms 
  169   1        LCD_WR_REG(0xB1);     
  170   1        LCD_WR_DATA8(0x05);   
  171   1        LCD_WR_DATA8(0x3C);   
  172   1        LCD_WR_DATA8(0x3C);   
  173   1      
  174   1        LCD_WR_REG(0xB2);     
  175   1        LCD_WR_DATA8(0x05);   
  176   1        LCD_WR_DATA8(0x3C);   
  177   1        LCD_WR_DATA8(0x3C);   
  178   1      
  179   1        LCD_WR_REG(0xB3);     
  180   1        LCD_WR_DATA8(0x05);   
  181   1        LCD_WR_DATA8(0x3C);   
  182   1        LCD_WR_DATA8(0x3C);   
  183   1        LCD_WR_DATA8(0x05);   
  184   1        LCD_WR_DATA8(0x3C);   
  185   1        LCD_WR_DATA8(0x3C);   
  186   1      
  187   1        LCD_WR_REG(0xB4);     //Dot inversion
  188   1        LCD_WR_DATA8(0x03);   
C251 COMPILER V5.60.0,  lcd_init                                                           29/10/24  08:37:10  PAGE 4   

  189   1      
  190   1        LCD_WR_REG(0xC0);     
  191   1        LCD_WR_DATA8(0x0E);   
  192   1        LCD_WR_DATA8(0x0E);   
  193   1        LCD_WR_DATA8(0x04);   
  194   1      
  195   1        LCD_WR_REG(0xC1);     
  196   1        LCD_WR_DATA8(0xC5);   
  197   1      
  198   1        LCD_WR_REG(0xC2);     
  199   1        LCD_WR_DATA8(0x0d);   
  200   1        LCD_WR_DATA8(0x00);   
  201   1      
  202   1        LCD_WR_REG(0xC3);     
  203   1        LCD_WR_DATA8(0x8D);   
  204   1        LCD_WR_DATA8(0x2A);   
  205   1      
  206   1        LCD_WR_REG(0xC4);     
  207   1        LCD_WR_DATA8(0x8D);   
  208   1        LCD_WR_DATA8(0xEE);   
  209   1      
  210   1        LCD_WR_REG(0xC5);     //VCOM
  211   1        LCD_WR_DATA8(0x06); //1D  .06
  212   1      
  213   1      
  214   1        LCD_WR_REG(0x36);     //MX, MY, RGB mode
  215   1        if(USE_HORIZONTAL==0)LCD_WR_DATA8(0x08);
  216   1        else if(USE_HORIZONTAL==1)LCD_WR_DATA8(0xC8);
  217   1        else if(USE_HORIZONTAL==2)LCD_WR_DATA8(0x78);
  218   1        else LCD_WR_DATA8(0xA8);  
  219   1      
  220   1        LCD_WR_REG(0x3A); 
  221   1        LCD_WR_DATA8(0x55);
  222   1          
  223   1        LCD_WR_REG(0xE0);     
  224   1        LCD_WR_DATA8(0x0b);   
  225   1        LCD_WR_DATA8(0x17);   
  226   1        LCD_WR_DATA8(0x0a);   
  227   1        LCD_WR_DATA8(0x0d);   
  228   1        LCD_WR_DATA8(0x1a);   
  229   1        LCD_WR_DATA8(0x19);   
  230   1        LCD_WR_DATA8(0x16);   
  231   1        LCD_WR_DATA8(0x1d);   
  232   1        LCD_WR_DATA8(0x21);   
  233   1        LCD_WR_DATA8(0x26);   
  234   1        LCD_WR_DATA8(0x37);   
  235   1        LCD_WR_DATA8(0x3c);   
  236   1        LCD_WR_DATA8(0x00);   
  237   1        LCD_WR_DATA8(0x09);   
  238   1        LCD_WR_DATA8(0x05);   
  239   1        LCD_WR_DATA8(0x10);   
  240   1      
  241   1        LCD_WR_REG(0xE1);     
  242   1        LCD_WR_DATA8(0x0c);   
  243   1        LCD_WR_DATA8(0x19);   
  244   1        LCD_WR_DATA8(0x09);   
  245   1        LCD_WR_DATA8(0x0d);   
  246   1        LCD_WR_DATA8(0x1b);   
  247   1        LCD_WR_DATA8(0x19);   
  248   1        LCD_WR_DATA8(0x15);   
  249   1        LCD_WR_DATA8(0x1d);   
  250   1        LCD_WR_DATA8(0x21);   
  251   1        LCD_WR_DATA8(0x26);   
  252   1        LCD_WR_DATA8(0x39);   
  253   1        LCD_WR_DATA8(0x3E);   
  254   1        LCD_WR_DATA8(0x00);   
C251 COMPILER V5.60.0,  lcd_init                                                           29/10/24  08:37:10  PAGE 5   

  255   1        LCD_WR_DATA8(0x09);   
  256   1        LCD_WR_DATA8(0x05);   
  257   1        LCD_WR_DATA8(0x10);   
  258   1        LCD_WR_REG(0x29);     //Display on
  259   1      }
  260          
  261          
  262          
  263          
  264          
  265          
  266          
  267          


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       555     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =    ------          4
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =    ------     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
