C251 COMPILER V5.60.0,  lcd                                                                29/10/24  08:37:09  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE lcd
OBJECT MODULE PLACED IN .\Output\lcd.obj
COMPILER INVOKED BY: D:\Program Files\keil5\C251\BIN\C251.EXE middle\LCDapp\lcd.c XSMALL BROWSE INCDIR(..\COMM;.\base;.\
                    -base\LCD;.\middle\LCDapp;.\base\adc;.\base\KEY;.\base\TIME;.\Src;.\middle\Adjust;.\Src;.\middle\WAVE;.\base\SPI;.\base\P
                    -WM;.\base\BUZZER;.\middle\ALARM;.\middle\MENU;.\Driver\inc) DEBUG PRINT(.\Listings\lcd.lst) TABS(2) OBJECT(.\Output\lcd.
                    -obj) 

stmt  level    source

    1          #include "lcd.h"
    2          #include "lcd_init.h"
    3          #include "lcdfont.h"
    4          
    5          //u8 xdata OLED_GRAM[128][8] = {0};
    6          /******************************************************************************
    7                函数说明：在指定区域填充颜色
    8                入口数据：xsta,ysta   起始坐标
    9                          xend,yend   终止坐标
   10                          color       要填充的颜色
   11                返回值：  无
   12          ******************************************************************************/
   13          void LCD_Fill(u16 xsta,u16 ysta,u16 xend,u16 yend,u16 color)
   14          {          
   15   1        u16 i,j; 
   16   1        LCD_Address_Set(xsta,ysta,xend-1,yend-1);//设置显示范围
   17   1        for(i=ysta;i<yend;i++)
   18   1        {                               
   19   2          for(j=xsta;j<xend;j++)
   20   2          {
   21   3            LCD_WR_DATA(color);
   22   3          }
   23   2        }                   
   24   1      }
   25          //void OLED_Clear_wave(void)//缓存方式  
   26          //{  
   27          //  u8 i,n;  
   28          //  for(i=1;i<8;i++)for(n=0;n<128;n++)OLED_GRAM[n][i]=0X00;  
   29          //}
   30          //void OLED_Refresh_Gram_wave(u16 xsta,u16 ysta,u16 xend,u16 yend)
   31          //{          
   32          //  u16 i,j; 
   33          //  LCD_Address_Set(xsta,ysta,xend-1,yend-1);//设置显示范围
   34          //  for(i=ysta;i<yend;i++)
   35          //  {                               
   36          //    for(j=xsta;j<xend;j++)
   37          //    {
   38          //      LCD_WR_DATA(OLED_GRAM[j][i]); 
   39          //    }
   40          //  }                   
   41          //}
   42          /******************************************************************************
   43                函数说明：在指定位置画点
   44                入口数据：x,y 画点坐标
   45                          color 点的颜色
   46                返回值：  无
   47          ******************************************************************************/
   48          void LCD_DrawPoint(u16 x,u16 y,u16 color)
   49          {
   50   1        LCD_Address_Set(x,y,x,y);//设置光标位置 
   51   1        LCD_WR_DATA(color);
   52   1      } 
   53          
   54          /******************************************************************************
   55                函数说明：画线
   56                入口数据：x1,y1   起始坐标
C251 COMPILER V5.60.0,  lcd                                                                29/10/24  08:37:09  PAGE 2   

   57                          x2,y2   终止坐标
   58                          color   线的颜色
   59                返回值：  无
   60          ******************************************************************************/
   61          void LCD_DrawLine(u16 x1,u16 y1,u16 x2,u16 y2,u16 color)
   62          {
   63   1        u16 t; 
   64   1        int xerr=0,yerr=0,delta_x,delta_y,distance;
   65   1        int incx,incy,uRow,uCol;
   66   1        delta_x=x2-x1; //计算坐标增量 
   67   1        delta_y=y2-y1;
   68   1        uRow=x1;//画线起点坐标
   69   1        uCol=y1;
   70   1        if(delta_x>0)incx=1; //设置单步方向 
   71   1        else if (delta_x==0)incx=0;//垂直线 
   72   1        else {incx=-1;delta_x=-delta_x;}
   73   1        if(delta_y>0)incy=1;
   74   1        else if (delta_y==0)incy=0;//水平线 
   75   1        else {incy=-1;delta_y=-delta_y;}
   76   1        if(delta_x>delta_y)distance=delta_x; //选取基本增量坐标轴 
   77   1        else distance=delta_y;
   78   1        for(t=0;t<distance+1;t++)
   79   1        {
   80   2          LCD_DrawPoint(uRow,uCol,color);//画点
   81   2          xerr+=delta_x;
   82   2          yerr+=delta_y;
   83   2          if(xerr>distance)
   84   2          {
   85   3            xerr-=distance;
   86   3            uRow+=incx;
   87   3          }
   88   2          if(yerr>distance)
   89   2          {
   90   3            yerr-=distance;
   91   3            uCol+=incy;
   92   3          }
   93   2        }
   94   1      }
   95          //void LCD_DrawLine_buffer(u16 x1,u16 y1,u16 x2,u16 y2,u16 color)
   96          //{
   97          //  u16 t; 
   98          //  int xerr=0,yerr=0,delta_x,delta_y,distance;
   99          //  int incx,incy,uRow,uCol;
  100          //  delta_x=x2-x1; //计算坐标增量 
  101          //  delta_y=y2-y1;
  102          //  uRow=x1;//画线起点坐标
  103          //  uCol=y1;
  104          //  if(delta_x>0)incx=1; //设置单步方向 
  105          //  else if (delta_x==0)incx=0;//垂直线 
  106          //  else {incx=-1;delta_x=-delta_x;}
  107          //  if(delta_y>0)incy=1;
  108          //  else if (delta_y==0)incy=0;//水平线 
  109          //  else {incy=-1;delta_y=-delta_y;}
  110          //  if(delta_x>delta_y)distance=delta_x; //选取基本增量坐标轴 
  111          //  else distance=delta_y;
  112          //  for(t=0;t<distance+1;t++)
  113          //  {
  114          //    OLED_DrawPoint(uRow,uCol,color);//画点
  115          //    xerr+=delta_x;
  116          //    yerr+=delta_y;
  117          //    if(xerr>distance)
  118          //    {
  119          //      xerr-=distance;
  120          //      uRow+=incx;
  121          //    }
  122          //    if(yerr>distance)
C251 COMPILER V5.60.0,  lcd                                                                29/10/24  08:37:09  PAGE 3   

  123          //    {
  124          //      yerr-=distance;
  125          //      uCol+=incy;
  126          //    }
  127          //  }
  128          //}
  129          
  130          /******************************************************************************
  131                函数说明：画矩形
  132                入口数据：x1,y1   起始坐标
  133                          x2,y2   终止坐标
  134                          color   矩形的颜色
  135                返回值：  无
  136          ******************************************************************************/
  137          void LCD_DrawRectangle(u16 x1, u16 y1, u16 x2, u16 y2,u16 color)
  138          {
  139   1        LCD_DrawLine(x1,y1,x2,y1,color);
  140   1        LCD_DrawLine(x1,y1,x1,y2,color);
  141   1        LCD_DrawLine(x1,y2,x2,y2,color);
  142   1        LCD_DrawLine(x2,y1,x2,y2,color);
  143   1      }
  144          
  145          
  146          /******************************************************************************
  147                函数说明：画圆
  148                入口数据：x0,y0   圆心坐标
  149                          r       半径
  150                          color   圆的颜色
  151                返回值：  无
  152          ******************************************************************************/
  153          void Draw_Circle(u16 x0,u16 y0,u8 r,u16 color)
  154          {
  155   1        int a,b;
  156   1        a=0;b=r;    
  157   1        while(a<=b)
  158   1        {
  159   2          LCD_DrawPoint(x0-b,y0-a,color);             //3           
  160   2          LCD_DrawPoint(x0+b,y0-a,color);             //0           
  161   2          LCD_DrawPoint(x0-a,y0+b,color);             //1                
  162   2          LCD_DrawPoint(x0-a,y0-b,color);             //2             
  163   2          LCD_DrawPoint(x0+b,y0+a,color);             //4               
  164   2          LCD_DrawPoint(x0+a,y0-b,color);             //5
  165   2          LCD_DrawPoint(x0+a,y0+b,color);             //6 
  166   2          LCD_DrawPoint(x0-b,y0+a,color);             //7
  167   2          a++;
  168   2          if((a*a+b*b)>(r*r))//判断要画的点是否过远
  169   2          {
  170   3            b--;
  171   3          }
  172   2        }
  173   1      }
  174          
  175          /******************************************************************************
  176                函数说明：显示汉字串
  177                入口数据：x,y显示坐标
  178                          *s 要显示的汉字串
  179                          fc 字的颜色
  180                          bc 字的背景色
  181                          sizey 字号 可选 16 24 32
  182                          mode:  0非叠加模式  1叠加模式
  183                返回值：  无
  184          ******************************************************************************/
  185          void LCD_ShowChinese(u16 x,u16 y,u8 *s,u16 fc,u16 bc,u8 sizey,u8 mode)
  186          {
  187   1        while(*s!=0)
  188   1        {
C251 COMPILER V5.60.0,  lcd                                                                29/10/24  08:37:09  PAGE 4   

  189   2          if(sizey==12) LCD_ShowChinese12x12(x,y,s,fc,bc,sizey,mode);
  190   2          else if(sizey==16) LCD_ShowChinese16x16(x,y,s,fc,bc,sizey,mode);
  191   2          else if(sizey==24) LCD_ShowChinese24x24(x,y,s,fc,bc,sizey,mode);
  192   2          else if(sizey==32) LCD_ShowChinese32x32(x,y,s,fc,bc,sizey,mode);
  193   2          else return;
  194   2          s+=2;
  195   2          x+=sizey;
  196   2        }
  197   1      }
  198          
  199          /******************************************************************************
  200                函数说明：显示单个12x12汉字
  201                入口数据：x,y显示坐标
  202                          *s 要显示的汉字
  203                          fc 字的颜色
  204                          bc 字的背景色
  205                          sizey 字号
  206                          mode:  0非叠加模式  1叠加模式
  207                返回值：  无
  208          ******************************************************************************/
  209          void LCD_ShowChinese12x12(u16 x,u16 y,u8 *s,u16 fc,u16 bc,u8 sizey,u8 mode)
  210          {
  211   1        u8 i,j,m=0;
  212   1        u16 k;
  213   1        u16 HZnum;//汉字数目
  214   1        u16 TypefaceNum;//一个字符所占字节大小
  215   1        u16 x0=x;
  216   1        TypefaceNum=(sizey/8+((sizey%8)?1:0))*sizey;
  217   1                                 
  218   1        HZnum=sizeof(tfont12)/sizeof(typFNT_GB12);  //统计汉字数目
  219   1        for(k=0;k<HZnum;k++) 
  220   1        {
  221   2          if((tfont12[k].Index[0]==*(s))&&(tfont12[k].Index[1]==*(s+1)))
  222   2          {   
  223   3            LCD_Address_Set(x,y,x+sizey-1,y+sizey-1);
  224   3            for(i=0;i<TypefaceNum;i++)
  225   3            {
  226   4              for(j=0;j<8;j++)
  227   4              { 
  228   5                if(!mode)//非叠加方式
  229   5                {
  230   6                  if(tfont12[k].Msk[i]&(0x01<<j))LCD_WR_DATA(fc);
  231   6                  else LCD_WR_DATA(bc);
  232   6                  m++;
  233   6                  if(m%sizey==0)
  234   6                  {
  235   7                    m=0;
  236   7                    break;
  237   7                  }
  238   6                }
  239   5                else//叠加方式
  240   5                {
  241   6                  if(tfont12[k].Msk[i]&(0x01<<j)) LCD_DrawPoint(x,y,fc);//画一个点
  242   6                  x++;
  243   6                  if((x-x0)==sizey)
  244   6                  {
  245   7                    x=x0;
  246   7                    y++;
  247   7                    break;
  248   7                  }
  249   6                }
  250   5              }
  251   4            }
  252   3          }           
  253   2          continue;  //查找到对应点阵字库立即退出，防止多个汉字重复取模带来影响
  254   2        }
C251 COMPILER V5.60.0,  lcd                                                                29/10/24  08:37:09  PAGE 5   

  255   1      } 
  256          
  257          /******************************************************************************
  258                函数说明：显示单个16x16汉字
  259                入口数据：x,y显示坐标
  260                          *s 要显示的汉字
  261                          fc 字的颜色
  262                          bc 字的背景色
  263                          sizey 字号
  264                          mode:  0非叠加模式  1叠加模式
  265                返回值：  无
  266          ******************************************************************************/
  267          void LCD_ShowChinese16x16(u16 x,u16 y,u8 *s,u16 fc,u16 bc,u8 sizey,u8 mode)
  268          {
  269   1        u8 i,j,m=0;
  270   1        u16 k;
  271   1        u16 HZnum;//汉字数目
  272   1        u16 TypefaceNum;//一个字符所占字节大小
  273   1        u16 x0=x;
  274   1        TypefaceNum=(sizey/8+((sizey%8)?1:0))*sizey;
  275   1        HZnum=sizeof(tfont16)/sizeof(typFNT_GB16);  //统计汉字数目
  276   1        for(k=0;k<HZnum;k++) 
  277   1        {
  278   2          if ((tfont16[k].Index[0]==*(s))&&(tfont16[k].Index[1]==*(s+1)))
  279   2          {   
  280   3            LCD_Address_Set(x,y,x+sizey-1,y+sizey-1);
  281   3            for(i=0;i<TypefaceNum;i++)
  282   3            {
  283   4              for(j=0;j<8;j++)
  284   4              { 
  285   5                if(!mode)//非叠加方式
  286   5                {
  287   6                  if(tfont16[k].Msk[i]&(0x01<<j))LCD_WR_DATA(fc);
  288   6                  else LCD_WR_DATA(bc);
  289   6                  m++;
  290   6                  if(m%sizey==0)
  291   6                  {
  292   7                    m=0;
  293   7                    break;
  294   7                  }
  295   6                }
  296   5                else//叠加方式
  297   5                {
  298   6                  if(tfont16[k].Msk[i]&(0x01<<j)) LCD_DrawPoint(x,y,fc);//画一个点
  299   6                  x++;
  300   6                  if((x-x0)==sizey)
  301   6                  {
  302   7                    x=x0;
  303   7                    y++;
  304   7                    break;
  305   7                  }
  306   6                }
  307   5              }
  308   4            }
  309   3          }           
  310   2          continue;  //查找到对应点阵字库立即退出，防止多个汉字重复取模带来影响
  311   2        }
  312   1      } 
  313          
  314          
  315          /******************************************************************************
  316                函数说明：显示单个24x24汉字
  317                入口数据：x,y显示坐标
  318                          *s 要显示的汉字
  319                          fc 字的颜色
  320                          bc 字的背景色
C251 COMPILER V5.60.0,  lcd                                                                29/10/24  08:37:09  PAGE 6   

  321                          sizey 字号
  322                          mode:  0非叠加模式  1叠加模式
  323                返回值：  无
  324          ******************************************************************************/
  325          void LCD_ShowChinese24x24(u16 x,u16 y,u8 *s,u16 fc,u16 bc,u8 sizey,u8 mode)
  326          {
  327   1        u8 i,j,m=0;
  328   1        u16 k;
  329   1        u16 HZnum;//汉字数目
  330   1        u16 TypefaceNum;//一个字符所占字节大小
  331   1        u16 x0=x;
  332   1        TypefaceNum=(sizey/8+((sizey%8)?1:0))*sizey;
  333   1        HZnum=sizeof(tfont24)/sizeof(typFNT_GB24);  //统计汉字数目
  334   1        for(k=0;k<HZnum;k++) 
  335   1        {
  336   2          if ((tfont24[k].Index[0]==*(s))&&(tfont24[k].Index[1]==*(s+1)))
  337   2          {   
  338   3            LCD_Address_Set(x,y,x+sizey-1,y+sizey-1);
  339   3            for(i=0;i<TypefaceNum;i++)
  340   3            {
  341   4              for(j=0;j<8;j++)
  342   4              { 
  343   5                if(!mode)//非叠加方式
  344   5                {
  345   6                  if(tfont24[k].Msk[i]&(0x01<<j))LCD_WR_DATA(fc);
  346   6                  else LCD_WR_DATA(bc);
  347   6                  m++;
  348   6                  if(m%sizey==0)
  349   6                  {
  350   7                    m=0;
  351   7                    break;
  352   7                  }
  353   6                }
  354   5                else//叠加方式
  355   5                {
  356   6                  if(tfont24[k].Msk[i]&(0x01<<j)) LCD_DrawPoint(x,y,fc);//画一个点
  357   6                  x++;
  358   6                  if((x-x0)==sizey)
  359   6                  {
  360   7                    x=x0;
  361   7                    y++;
  362   7                    break;
  363   7                  }
  364   6                }
  365   5              }
  366   4            }
  367   3          }           
  368   2          continue;  //查找到对应点阵字库立即退出，防止多个汉字重复取模带来影响
  369   2        }
  370   1      } 
  371          
  372          /******************************************************************************
  373                函数说明：显示单个32x32汉字
  374                入口数据：x,y显示坐标
  375                          *s 要显示的汉字
  376                          fc 字的颜色
  377                          bc 字的背景色
  378                          sizey 字号
  379                          mode:  0非叠加模式  1叠加模式
  380                返回值：  无
  381          ******************************************************************************/
  382          void LCD_ShowChinese32x32(u16 x,u16 y,u8 *s,u16 fc,u16 bc,u8 sizey,u8 mode)
  383          {
  384   1        u8 i,j,m=0;
  385   1        u16 k;
  386   1        u16 HZnum;//汉字数目
C251 COMPILER V5.60.0,  lcd                                                                29/10/24  08:37:09  PAGE 7   

  387   1        u16 TypefaceNum;//一个字符所占字节大小
  388   1        u16 x0=x;
  389   1        TypefaceNum=(sizey/8+((sizey%8)?1:0))*sizey;
  390   1        HZnum=sizeof(tfont32)/sizeof(typFNT_GB32);  //统计汉字数目
  391   1        for(k=0;k<HZnum;k++) 
  392   1        {
  393   2          if ((tfont32[k].Index[0]==*(s))&&(tfont32[k].Index[1]==*(s+1)))
  394   2          {   
  395   3            LCD_Address_Set(x,y,x+sizey-1,y+sizey-1);
  396   3            for(i=0;i<TypefaceNum;i++)
  397   3            {
  398   4              for(j=0;j<8;j++)
  399   4              { 
  400   5                if(!mode)//非叠加方式
  401   5                {
  402   6                  if(tfont32[k].Msk[i]&(0x01<<j))LCD_WR_DATA(fc);
  403   6                  else LCD_WR_DATA(bc);
  404   6                  m++;
  405   6                  if(m%sizey==0)
  406   6                  {
  407   7                    m=0;
  408   7                    break;
  409   7                  }
  410   6                }
  411   5                else//叠加方式
  412   5                {
  413   6                  if(tfont32[k].Msk[i]&(0x01<<j)) LCD_DrawPoint(x,y,fc);//画一个点
  414   6                  x++;
  415   6                  if((x-x0)==sizey)
  416   6                  {
  417   7                    x=x0;
  418   7                    y++;
  419   7                    break;
  420   7                  }
  421   6                }
  422   5              }
  423   4            }
  424   3          }           
  425   2          continue;  //查找到对应点阵字库立即退出，防止多个汉字重复取模带来影响
  426   2        }
  427   1      }
  428          
  429          
  430          /******************************************************************************
  431                函数说明：显示单个字符
  432                入口数据：x,y显示坐标
  433                          num 要显示的字符
  434                          fc 字的颜色
  435                          bc 字的背景色
  436                          sizey 字号
  437                          mode:  0非叠加模式  1叠加模式
  438                返回值：  无
  439          ******************************************************************************/
  440          void LCD_ShowChar(u16 x,u16 y,u8 num,u16 fc,u16 bc,u8 sizey,u8 mode)
  441          {
  442   1        u8 temp,sizex,t,m=0;
  443   1        u16 i,TypefaceNum;//一个字符所占字节大小
  444   1        u16 x0=x;
  445   1        sizex=sizey/2;
  446   1        if(sizey==48)
  447   1          sizex=28;
  448   1        TypefaceNum=(sizex/8+((sizex%8)?1:0))*sizey;
  449   1          if(sizey==40||sizey==41||sizey==42||sizey==43||sizey==48)
  450   1          num=num-'-';
  451   1          else
  452   1        num=num-' ';    //得到偏移后的值
C251 COMPILER V5.60.0,  lcd                                                                29/10/24  08:37:09  PAGE 8   

  453   1        LCD_Address_Set(x,y,x+sizex-1,y+sizey-1);  //设置光标位置 
  454   1        for(i=0;i<TypefaceNum;i++)
  455   1        { 
  456   2          if(sizey==12)temp=ascii_1206[num][i];          //调用6x12字体
  457   2          else if(sizey==16)temp=ascii_1608[num][i];     //调用8x16字体
  458   2          else if(sizey==24)temp=ascii_2412[num][i];     //调用12x24字体
  459   2          else if(sizey==32)temp=ascii_3216[num][i];     //调用16x32字体
  460   2          else if(sizey==40)temp=ascii_4020[num][i];     //调用20x40字体
  461   2          else if(sizey==41)temp=ascii_4120[num][i];     //调用20x40字体
  462   2          else if(sizey==42)temp=ascii_4220[num][i];     //调用20x40字体
  463   2          else if(sizey==43)temp=ascii_4320[num][i];     //调用20x40字体
  464   2          else if(sizey==48)temp=ascii_4828[num][i];     //调用20x40字体
  465   2          else return;
  466   2          for(t=0;t<8;t++)
  467   2          {
  468   3            if(!mode)//非叠加模式
  469   3            {
  470   4              if(temp&(0x01<<t))LCD_WR_DATA(fc);
  471   4              else LCD_WR_DATA(bc);
  472   4              m++;
  473   4              if(m%sizex==0)
  474   4              {
  475   5                m=0;
  476   5                break;
  477   5              }
  478   4            }
  479   3            else//叠加模式
  480   3            {
  481   4              if(temp&(0x01<<t))LCD_DrawPoint(x,y,fc);//画一个点
  482   4              x++;
  483   4              if((x-x0)==sizex)
  484   4              {
  485   5                x=x0;
  486   5                y++;
  487   5                break;
  488   5              }
  489   4            }
  490   3          }
  491   2        }         
  492   1      }
  493          /******************************************************************************
  494                函数说明：显示单个字符
  495                入口数据：x,y显示坐标
  496                          num 要显示的字符
  497                          fc 字的颜色
  498                          bc 字的背景色
  499                          sizey 字号
  500                          mode:  0非叠加模式  1叠加模式
  501                返回值：  无
  502          ******************************************************************************/
  503          void LCD_ShowChar1(u16 x,u16 y,u8 num,u16 fc,u16 bc,u8 sizey,u8 mode)
  504          {
  505   1        u8 temp,sizex,t,m=0;
  506   1        u16 i,TypefaceNum;//一个字符所占字节大小
  507   1        u16 x0=x;
  508   1        sizex=sizey/2;
  509   1        if(sizey==48)
  510   1          sizex=28;
  511   1        TypefaceNum=(sizex/8+((sizex%8)?1:0))*sizey;
  512   1        //num=num-' ';    //得到偏移后的值
  513   1        LCD_Address_Set(x,y,x+sizex-1,y+sizey-1);  //设置光标位置 
  514   1        for(i=0;i<TypefaceNum;i++)
  515   1        { 
  516   2           if(sizey==16)temp=ascii_1608[num][i];     //调用8x16字体
  517   2          else if(sizey==24)temp=ascii_2412[num][i];     //调用12x24字体
  518   2          //else if(sizey==32)temp=ascii_3216[num][i];     //调用16x32字体
C251 COMPILER V5.60.0,  lcd                                                                29/10/24  08:37:09  PAGE 9   

  519   2          else if(sizey==40)temp=ascii_4020[num][i];     //调用20x40字体
  520   2          else if(sizey==48)temp=ascii_4828[num][i];     //调用20x40字体
  521   2          else return;
  522   2          for(t=0;t<8;t++)
  523   2          {
  524   3            if(!mode)//非叠加模式
  525   3            {
  526   4              if(temp&(0x01<<t))LCD_WR_DATA(fc);
  527   4              else LCD_WR_DATA(bc);
  528   4              m++;
  529   4              if(m%sizex==0)
  530   4              {
  531   5                m=0;
  532   5                break;
  533   5              }
  534   4            }
  535   3            else//叠加模式
  536   3            {
  537   4              if(temp&(0x01<<t))LCD_DrawPoint(x,y,fc);//画一个点
  538   4              x++;
  539   4              if((x-x0)==sizex)
  540   4              {
  541   5                x=x0;
  542   5                y++;
  543   5                break;
  544   5              }
  545   4            }
  546   3          }
  547   2        }         
  548   1      }
  549          
  550          /******************************************************************************
  551                函数说明：显示字符串
  552                入口数据：x,y显示坐标
  553                          *p 要显示的字符串
  554                          fc 字的颜色
  555                          bc 字的背景色
  556                          sizey 字号
  557                          mode:  0非叠加模式  1叠加模式
  558                返回值：  无
  559          ******************************************************************************/
  560          void LCD_ShowString(u16 x,u16 y,const u8 *p,u16 fc,u16 bc,u8 sizey,u8 mode)
  561          {         
  562   1        while(*p!='\0')
  563   1        {       
  564   2          LCD_ShowChar(x,y,*p,fc,bc,sizey,mode);
  565   2          x+=sizey/2;
  566   2          p++;
  567   2        }  
  568   1      }
  569          
  570          
  571          /******************************************************************************
  572                函数说明：显示数字
  573                入口数据：m底数，n指数
  574                返回值：  无
  575          ******************************************************************************/
  576          u32 mypow(u8 m,u8 n)
  577          {
  578   1        u32 result=1;  
  579   1        while(n--)result*=m;
  580   1        return result;
  581   1      }
  582          
  583          
  584          /******************************************************************************
C251 COMPILER V5.60.0,  lcd                                                                29/10/24  08:37:09  PAGE 10  

  585                函数说明：显示整数变量
  586                入口数据：x,y显示坐标
  587                          num 要显示整数变量
  588                          len 要显示的位数
  589                          fc 字的颜色
  590                          bc 字的背景色
  591                          sizey 字号
  592                返回值：  无
  593          ******************************************************************************/
  594          void LCD_ShowIntNum(u16 x,u16 y,u16 num,u8 len,u16 fc,u16 bc,u8 sizey)
  595          {           
  596   1        u8 t,temp;
  597   1        u8 enshow=0;
  598   1        u8 sizex=sizey/2;
  599   1          if(sizey==48)
  600   1          sizex=28;
  601   1        for(t=0;t<len;t++)
  602   1        {
  603   2          temp=(num/mypow(10,len-t-1))%10;
*** WARNING C188 IN LINE 603 OF middle\LCDapp\lcd.c: 'parameter 2': value truncated
  604   2          if(enshow==0&&t<(len-1))
  605   2          {
  606   3            if(temp==0)
  607   3            {
  608   4              LCD_ShowChar(x+t*sizex,y,'0',fc,bc,sizey,0);
  609   4              continue;
  610   4            }else enshow=1; 
  611   3             
  612   3          }
  613   2          LCD_ShowChar(x+t*sizex,y,temp+48,fc,bc,sizey,0);
*** WARNING C188 IN LINE 613 OF middle\LCDapp\lcd.c: 'parameter 3': value truncated
  614   2        }
  615   1      } 
  616          
  617          /******************************************************************************
  618                函数说明：显示多位小数变量
  619                入口数据：x,y显示坐标
  620                          num 要显示小数变量
  621                          len 要显示的位数
  622                          point 要显示的小数位数
  623                          fc 字的颜色
  624                          bc 字的背景色
  625                          sizey 字号
  626                返回值：  无
  627          ******************************************************************************/
  628          void LCD_ShowFloatNum(u16 x,u16 y,u32 num,u8 len,u8 point,u16 fc,u16 bc,u8 sizey)
  629          {           
  630   1        //u8 t,temp,sizex;
  631   1        u8 sizex;
  632   1        u16 temppoint;
  633   1        sizex=sizey/2;
  634   1          if(sizey==48)
  635   1          sizex=28;
  636   1        switch (point)
  637   1        {
  638   2          case 0:  temppoint=1;    break;
  639   2          case 1:  temppoint=10;    break;
  640   2          case 2:  temppoint=100;   break;
  641   2          case 3:  temppoint=1000;  break;
  642   2          case 4:  temppoint=10000; break;
  643   2          default :   break;//  当所有选择皆不成立，则进入预设区块。
  644   2        }
  645   1        if(point==0)
  646   1        LCD_ShowIntNum(x,y,num,len,fc,bc,sizey);
*** WARNING C188 IN LINE 646 OF middle\LCDapp\lcd.c: 'parameter 3': value truncated
  647   1        else
C251 COMPILER V5.60.0,  lcd                                                                29/10/24  08:37:09  PAGE 11  

  648   1        {
  649   2          LCD_ShowIntNum(x,y,num/temppoint,len-point,fc,bc,sizey);
*** WARNING C188 IN LINE 649 OF middle\LCDapp\lcd.c: 'parameter 3': value truncated
*** WARNING C188 IN LINE 649 OF middle\LCDapp\lcd.c: 'parameter 4': value truncated
  650   2          LCD_ShowString(x+(len-point)*sizex,y,".",fc,bc,sizey,0);
  651   2          LCD_ShowIntNum(x+sizex+(len-point)*sizex,y,num%temppoint,point,fc,bc,sizey);
*** WARNING C188 IN LINE 651 OF middle\LCDapp\lcd.c: 'parameter 3': value truncated
  652   2        }
  653   1      }
  654          /******************************************************************************
  655                函数说明：显示两位小数变量
  656                入口数据：x,y显示坐标
  657                          num 要显示小数变量
  658                          len 要显示的位数
  659                          fc 字的颜色
  660                          bc 字的背景色
  661                          sizey 字号
  662                返回值：  无
  663          ******************************************************************************/
  664          void LCD_ShowFloatNum1(u16 x,u16 y,float num,u8 len,u16 fc,u16 bc,u8 sizey)
  665          {           
  666   1        u8 t,temp,sizex;
  667   1        u16 num1;
  668   1        sizex=sizey/2;
  669   1        num1=num*100;
  670   1        for(t=0;t<len;t++)
  671   1        {
  672   2          temp=(num1/mypow(10,len-t-1))%10;
*** WARNING C188 IN LINE 672 OF middle\LCDapp\lcd.c: 'parameter 2': value truncated
  673   2          if(t==(len-2))
  674   2          {
  675   3            LCD_ShowChar(x+(len-2)*sizex,y,'.',fc,bc,sizey,0);
  676   3            t++;
  677   3            len+=1;
  678   3          }
  679   2          LCD_ShowChar(x+t*sizex,y,temp+48,fc,bc,sizey,0);
*** WARNING C188 IN LINE 679 OF middle\LCDapp\lcd.c: 'parameter 3': value truncated
  680   2        }
  681   1      }
  682          
  683          
  684          /******************************************************************************
  685                函数说明：显示图片
  686                入口数据：x,y起点坐标
  687                          length 图片长度
  688                          width  图片宽度
  689                          pic[]  图片数组    
  690                返回值：  无
  691          ******************************************************************************/
  692          void LCD_ShowPicture(u16 x,u16 y,u16 length,u16 width,const u8 pic[])
  693          {
  694   1        u16 i,j;
  695   1        u32 k=0;
  696   1        LCD_Address_Set(x,y,x+length-1,y+width-1);
  697   1        for(i=0;i<length;i++)
  698   1        {
  699   2          for(j=0;j<width;j++)
  700   2          {
  701   3            LCD_WR_DATA8(pic[k*2]);
  702   3            LCD_WR_DATA8(pic[k*2+1]);
  703   3            k++;
  704   3          }
  705   2        }     
  706   1      }
  707          
  708          
C251 COMPILER V5.60.0,  lcd                                                                29/10/24  08:37:09  PAGE 12  



Module Information          Static   Overlayable
------------------------------------------------
  code size            =     25584     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =    ------        228
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =         2     ------
End of Module Information.


C251 COMPILATION COMPLETE.  8 WARNING(S),  0 ERROR(S)
