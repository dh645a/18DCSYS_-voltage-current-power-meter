C251 COMPILER V5.60.0,  PWM                                                                29/10/24  08:37:11  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE PWM
OBJECT MODULE PLACED IN .\Output\PWM.obj
COMPILER INVOKED BY: D:\Program Files\keil5\C251\BIN\C251.EXE base\PWM\PWM.c XSMALL BROWSE INCDIR(..\COMM;.\base;.\base\
                    -LCD;.\middle\LCDapp;.\base\adc;.\base\KEY;.\base\TIME;.\Src;.\middle\Adjust;.\Src;.\middle\WAVE;.\base\SPI;.\base\PWM;.\
                    -base\BUZZER;.\middle\ALARM;.\middle\MENU;.\Driver\inc) DEBUG PRINT(.\Listings\PWM.lst) TABS(2) OBJECT(.\Output\PWM.obj) 

stmt  level    source

    1          /*-------------------------------------------------------------------------------------------------------
             ---*/
    2          /*                                                                                                       
             -  */
    3          /*                                                                                                       
             -  */
    4          /*-------------------------------------------------------------------------------------------------------
             ---*/
    5          
    6          //*******************************************************************************************************
             -****
    7          
    8          //*******************************************************************************************************
             -****
    9          #include "PWM.h"
   10          /****************************** 用户定义宏 ***********************************/
   11          
   12          #define PWM1_0      0x00  //P:P1.0  N:P1.1
   13          #define PWM1_1      0x01  //P:P2.0  N:P2.1
   14          #define PWM1_2      0x02  //P:P6.0  N:P6.1
   15          
   16          #define PWM2_0      0x00  //P:P1.2/P5.4  N:P1.3
   17          #define PWM2_1      0x04  //P:P2.2  N:P2.3
   18          #define PWM2_2      0x08  //P:P6.2  N:P6.3
   19          
   20          #define PWM3_0      0x00  //P:P1.4  N:P1.5
   21          #define PWM3_1      0x10  //P:P2.4  N:P2.5
   22          #define PWM3_2      0x20  //P:P6.4  N:P6.5
   23          
   24          #define PWM4_0      0x00  //P:P1.6  N:P1.7
   25          #define PWM4_1      0x40  //P:P2.6  N:P2.7
   26          #define PWM4_2      0x80  //P:P6.6  N:P6.7
   27          #define PWM4_3      0xC0  //P:P3.4  N:P3.3
   28          
   29          #define ENO1P       0x01
   30          #define ENO1N       0x02
   31          #define ENO2P       0x04
   32          #define ENO2N       0x08
   33          #define ENO3P       0x10
   34          #define ENO3N       0x20
   35          #define ENO4P       0x40
   36          #define ENO4N       0x80
   37          
   38          #define PWM5_0      0x00  //P2.0
   39          #define PWM5_1      0x01  //P1.7
   40          #define PWM5_2      0x02  //P0.0
   41          #define PWM5_3      0x03  //P7.4
   42          
   43          #define PWM6_0      0x00  //P2.1
   44          #define PWM6_1      0x04  //P5.4
   45          #define PWM6_2      0x08  //P0.1
   46          #define PWM6_3      0x0C  //P7.5
   47          
   48          #define PWM7_0      0x00  //P2.2
   49          #define PWM7_1      0x10  //P3.3
   50          #define PWM7_2      0x20  //P0.2
   51          #define PWM7_3      0x30  //P7.6
C251 COMPILER V5.60.0,  PWM                                                                29/10/24  08:37:11  PAGE 2   

   52          
   53          #define PWM8_0      0x00  //P2.3
   54          #define PWM8_1      0x40  //P3.4
   55          #define PWM8_2      0x80  //P0.3
   56          #define PWM8_3      0xC0  //P7.7
   57          
   58          #define ENO5P       0x01
   59          #define ENO6P       0x04
   60          #define ENO7P       0x10
   61          #define ENO8P       0x40
   62          
   63          /*****************************************************************************/
   64          
   65          
   66          /*************  本地常量声明    **************/
   67          
   68          #define PWM_PERIOD  30000    //设置周期值
   69          
   70          /*************  本地变量声明    **************/
   71          
   72          bit B_1ms;          //1ms标志
   73          
   74          u16 PWM1_Duty;
   75          u16 PWM2_Duty;
   76          u16 PWM3_Duty;
   77          u16 PWM4_Duty;
   78          
   79          bit PWM1_Flag;
   80          bit PWM2_Flag;
   81          bit PWM3_Flag;
   82          bit PWM4_Flag;
   83          
   84          
   85          /********************* pwm函数 *************************/
   86          void pwm_init_beep(void)
   87          {
   88   1      
   89   1          PWMA_CCER1 = 0x00; //写 CCMRx 前必须先清零 CCxE 关闭通道
   90   1          PWMA_CCER2 = 0x00;
   91   1          PWMA_CCMR4 = 0x68;//通道模式配置
   92   1          //PWMA_CCER1 = 0x57; //配置通道输出使能和极性 低电平有效
   93   1          PWMA_CCER2 = 0x30;//pwm4  配置通道输出使能和极性 高电平有效
   94   1        
   95   1          PWMA_PSCRH = 0x01;    // 预分频寄存器, 分频 Fck_cnt = Fck_psc/(PSCR[15:0}+1), (默认)边沿对齐PWM频率 = SYS
             -clk/((PSCR+1)*(AAR+1)), 中央对齐PWM频率 = SYSclk/((PSCR+1)*(AAR+1)*2).
   96   1          PWMA_PSCRL = 0xDF;
   97   1          PWMA_ARRH = (u8)(PWM_PERIOD >> 8); //设置周期时间  自动重装载寄存器,  控制PWM周期, 
   98   1          PWMA_ARRL = (u8)PWM_PERIOD;
   99   1      
  100   1          PWMA_ENO = 0x00;
  101   1          PWMA_ENO |= ENO4P; //使能输出
  102   1          //PWMA_ENO |= ENO4N; //使能输出
  103   1      
  104   1          PWMA_PS = 0x00;  //高级 PWM 通道输出脚选择位
  105   1          PWMA_PS |= PWM4_3; //选择 PWM4_3 通道 P3.4
  106   1      
  107   1          PWMA_BKR = 0x80;  //使能主输出
  108   1          PWMA_CR1 |= 0x81; //使能ARR预装载,开始计时
  109   1      
  110   1      }
  111          void pwm_init_blk(void)
  112          {
  113   1          PWMB_CCER2 = 0x00;//写 CCMRx 前必须先清零 CCxE 关闭通道
  114   1          PWMB_CCMR3 = 0x68;//通道模式配置
  115   1          PWMB_CCER2 = 0x01; //配置通道输出使能和极性
  116   1          PWMB_ARRH = (u8)(PWM_PERIOD >> 8); //设置周期时间 (默认)边沿对齐PWM频率 = SYSclk/((PSCR+1)*(AAR+1))=3
C251 COMPILER V5.60.0,  PWM                                                                29/10/24  08:37:11  PAGE 3   

             -0000000/30000=1000  PSCR=0不分频
  117   1          PWMB_ARRL = (u8)PWM_PERIOD;
  118   1          PWMB_CCR7H = (u8)(20000 >> 8); //设置占空比时间
  119   1          PWMB_CCR7L = (u8)((20000));
  120   1          PWMB_ENO = 0x00;
  121   1          PWMB_ENO |= ENO7P; //使能输出
  122   1      
  123   1          PWMB_PS = 0x00;    //高级 PWM 通道输出脚选择位
  124   1          PWMB_PS |= PWM7_1; //选择 PWM7_1 通道
  125   1      
  126   1          PWMB_BKR = 0x80;   //使能主输出
  127   1          PWMB_CR1 |= 0x81;  //使能ARR预装载，开始计时
  128   1      }
  129          //========================================================================
  130          // 函数: UpdatePwm(void)
  131          // 描述: 更新PWM占空比. 
  132          // 参数: none.
  133          // 返回: none.
  134          // 版本: V1.0, 2012-11-22
  135          //========================================================================
  136          void UpdatePwm(u16 frequency,u16 duty)
  137          {
  138   1          PWMA_ARRH = (u8)(frequency >> 8); //设置周期时间
  139   1          PWMA_ARRL = (u8)frequency;
  140   1          PWMA_CCR4H = (u8)(duty >> 8); //设置占空比时间
  141   1          PWMA_CCR4L = (u8)(duty);
  142   1        
  143   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       284     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =         8     ------
  bit size             =         5     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =    ------     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
